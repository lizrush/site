{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/templates/Layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/InternalLink/index.js"],"names":["Blog","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_templates_Layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_SEO__WEBPACK_IMPORTED_MODULE_4__","_components_InternalLink__WEBPACK_IMPORTED_MODULE_5__","to","color","map","_ref","node","frontmatter","path","key","className","styles","post","yellowHighlight","date_published","gatsby__WEBPACK_IMPORTED_MODULE_2__","pinkUnderline","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Layout","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","style","margin","maxWidth","padding","_public_static_d_2994927498_json__WEBPACK_IMPORTED_MODULE_0__","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","InternalLink","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-blog-js-28e7f372855bc52986fe.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport { Layout } from '../templates/Layout'\nimport { SEO } from '../components/SEO'\nimport { InternalLink } from '../components/InternalLink'\n\nimport styles from './blog.module.scss'\n\nclass Blog extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <InternalLink to=\"/\" color=\"pink\">\n          ‚üµ back\n        </InternalLink>\n\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.frontmatter.path\n\n          return (\n            <div key={node.frontmatter.path} className={styles.post}>\n              <span className={styles.yellowHighlight}>\n                {node.frontmatter.date_published}\n              </span>\n\n              <h3>\n                <Link\n                  to={node.frontmatter.path}\n                  className={styles.pinkUnderline}\n                >\n                  {title}\n                </Link>\n              </h3>\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default Blog\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date_published], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date_published(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { graphql, StaticQuery } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport './layout.css'\nimport '../shared/shared.scss'\n\nexport function Layout({ children }) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={() => (\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `2.45rem 1.5rem`,\n          }}\n        >\n          {children}\n        </div>\n      )}\n    />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nexport function SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport styles from './styles.module.scss'\n\nexport function InternalLink({ color, children, ...props }) {\n  return (\n    <Link className={styles[color]} {...props}>\n      {children}\n    </Link>\n  )\n}\n"],"sourceRoot":""}